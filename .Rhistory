plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
demo_table <- read.csv(file="demo.csv", check.names = F, stringsAsFactors = F)
R --version
library(jsonlite)
demo_table2 <- fromJSON(txt="demo.json")
library(tidyverse)
demo_table3 <- read.csv("demo2.csv", check.names = F, stringsAsFactors = F)
long_table <- gather(demo_table3, key="Metric", value="Score", buying_price:popularity)
wide_table <- spread(long_table, key="Metric", value="Score")
all.equal(demo_table3, wide_table)
?ggplot()
mpg_summary <- mpg%>% group_by(manufacturer)%>%summarize(Vehicle_Count=n(), .groups = "keep")
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x=element_text(angle=45, hjust=1))
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl)%>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
plt + geom_line()+scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks=c(15:30))
plt <- ggplot(mpg,aes(x=displ,y=cty, color=class, shape=drv)) #import dataset into ggplot2
plt + geom_point()+xlab("Engine Size(L)")+ylab("City Fuel Efficiency (MPG)")
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt + geom_boxplot()+ theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") +
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type, year))+
theme(axis.text.x=element_text(angle=45,hjust=1), legend.position = "none")+
xlab("Manufacturer")
?sample()
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
population_table <- read.csv("used_car_data.csv", check.names = F,stringsAsFactors = F)
population_table <- read.csv("used_car_data.csv", check.names = F,stringsAsFactors = F)
population_table <- read.csv('used_car_data.csv', check.names = F,stringsAsFactors = F)
setwd("~/UofM- Data Analytics Bootcamp/Module 15/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv', check.names = F,stringsAsFactors = F)
population_table <- read.csv('used_car_data.csv', check.names = F,stringsAsFactors = F)
View(population_table)
View(population_table)
head(population_table)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(population_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
?t.test()
# Paired t-test
mpg_data <- read.csv("mpg_modified.csv")
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
?aov()
# ANOVA
mtcars_filt <- mtcars[,c("hp","cyl")]
View(mtcars_filt)
View(mtcars_filt)
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
View(mtcars_filt)
View(mtcars_filt)
aov(hp ~ cyl, data=mtcars_filt)
summary(aov(hp ~ cyl, data=mtcars_filt))
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
head(used_cars)
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
cor(used_matrix)
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
# LINEAR REGRESSION
lm(qsec ~ hp,mtcars)
summary(lm(qsec ~ hp,mtcars))
lm(qsec ~ hp,mtcars)
# LINEAR REGRESSION
model <- lm(qsec ~ hp,mtcars)
summary(lm(qsec ~ hp,mtcars))
model <- lm(qsec ~ hp,mtcars)
summary(lm(qsec ~ hp,mtcars))
y_vals<- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)']
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
> plt + geom_point() + geom_line(aes(y=yvals), color = "red")
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
plt + geom_point() + geom_line(aes(y=y_vals), color = "red")
?lm()
# MULTIPLE LINEAR REGRESSION
lm(qsec ~ mpg + disp + drat + wt + hp, data=mtcars)
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl)
tbl <- table(mpg$class,mpg$year)
setwd("C:/Users/diseg/OneDrive/Desktop/Analysis Projects/MechaCar_Statistical_Analysis")
clear()
clearPushBack()
